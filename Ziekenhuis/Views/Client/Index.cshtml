@model Ziekenhuis.Ziekenhuis.ViewModels.ClientListViewModel


@if (@Model.DoctorId != null)
{
    <h4>Lijst met clienten voor één dokter: @Model.DoctorFullName</h4>
}

@if (@Model.DoctorId == null)
{
    <h4>Lijst met clienten voor alle dokteren</h4>
}

<br />
<br />

<!-- Hier komt een string, om te clienten met een substring op te kunnen halen -->

@using (Html.BeginForm("Post1ClientIndex", "Client")) 
{
    <div class="form-group">
        @Html.HiddenFor(m=>m.DoctorId)
        @Html.EditorFor(m => m.PrefixString, new { placeholder = "Prefix clienten", @class = "form-control" })
        &nbsp;&nbsp;   <input type="submit" value="Clienten met prefix" />
    </div>
}

@using (Html.BeginForm("Post2ClientIndex", "Client"))
{
<div class="form-group">
    @Html.HiddenFor(m => m.DoctorId)
    @Html.EditorFor(m => m.SubString, new { placeholder = "Substring clienten", @class = "form-control" })
    &nbsp;&nbsp; <input type="submit" value="Clienten met substring " />
</div>
  
}

<br />

<button style="font-style: italic; color: purple">
    @Html.ActionLink($"Sorteer op clientnummer", "Index", "Client", 
    new { doctorId = Model.DoctorId, sortOnClientNumber = true, sortOnFirstName = false })
</button>

<br />
<button style="font-style: italic; color: purple">
    @Html.ActionLink($"Sorteer op voornaam", "Index", "Client",
    new { doctorId = Model.DoctorId, sortOnClientNumber = false, sortOnFirstName = true })
</button>

<br />


<p>
    @if (@Model.DoctorId != null)
    {
        <button style="font-style: italic; color: purple">
            @Html.ActionLink($"Maak client", "Create",
            new { doctorId = Model.DoctorId })
        </button>

    }

    <!-- Html.ActionLink maakt de hele knop aan, inclusief onderwater href = " " -->
    <button type="submit" style="color: blue; font-size: 14px">
        @Html.ActionLink("Terug naar Menu", "Index", "Home")
    </button>

</p>

<table class="table table-condensed table-hover">

    <tr>
        <th class="redJP tableHeaderJP purpleJP">
            @Html.DisplayName("Aktie code")
        </th>

        <th class="redJP tableHeaderJP purpleJP">
            @Html.DisplayName("Volledige naam")
        </th>

        <th class="redJP tableHeaderJP purpleJP">
            @Html.DisplayName("Clientnummer")
        </th>

        <th class="redJP tableHeaderJP purpleJP">
            @Html.DisplayName("Geboortedatum")
        </th>

        <th class="redJP tableHeaderJP purpleJP">
            @Html.DisplayName("Leeftijd in dagen")
        </th>

        <th class="redJP tableHeaderJP purpleJP">
            @Html.DisplayName("Aantal recepten")
        </th>

        @if (@Model.DoctorId == null)
        {
            <th class="redJP tableHeaderJP">
                @Html.DisplayName("Naam dokter")
            </th>
        }
    </tr>

    @foreach (var c in @Model.ClientVMList)
    {
<tr>

    <td>
        @Html.DisplayFor(i => c.Client.ActionCode)
    </td>
    <td>
        @Html.DisplayFor(i => c.ClientFullName)
    </td>
    <td>
        @Html.DisplayFor(i => c.Client.ClientNumber)
    </td>
    <td>
        @Html.DisplayFor(i => c.Client.BirthDate)
    </td>
    <td>
        @Html.DisplayFor(i => c.AgeInDays)
    </td>
    <td>
        @Html.DisplayFor(i => c.NrofPrescriptions)
    </td>

    @if (@Model.DoctorId == null)
    {
        <td>
            @Html.DisplayFor(i => c.DoctorFullName)
        </td>
    }
    <td>
        <button class="clickButtonJP">
            <!-- controller naam mag weg als je in dezelfde controller blijft -->
            @Html.ActionLink($"Wijzig", "Update", new { clientId = c.Client.Id })
        </button>
    </td>
    <td>
        <button class="clickButtonJP">
            <!-- controller naam mag weg als je in dezelfde controller blijft -->
            @Html.ActionLink($"Wijzig met Styling", "UpdateWithStyling", new { clientId = c.Client.Id })
        </button>
    </td>
    <td>
        <!-- onderstaande werkt, maar underline in knop is niet mooi -->
        <!-- De naam "clientId" moet exact overeenkomen met de parameter van de ActionResult Method Details -->
        <button class="clickButtonJP">
            @Html.ActionLink("Details", "Details", new { clientId = c.Client.Id })
        </button>
    </td>
    <td>
        <!-- De naam "clientId" moet exact overeenkomen met de parameter van de ActionResult Method Delete -->
        <button class="clickButtonJP">
            <!-- controller naam mag weg als je in dezelfde controller blijft -->
            @Html.ActionLink("Verwijder", "Delete", new { clientId = c.Client.Id })
        </button>
    </td>

    <td>
        <!-- clientId / doctorId moet overeenkomen met de parameters van de ActionResult Method Index in Prescription Controller -->
        <button class="clickButtonJP">
            @Html.ActionLink("Recepten", "Index", "Prescription", new { doctorId = c.Client.DoctorId, clientId = c.Client.Id })
        </button>
    </td>
    <td>
        <!-- clientId / doctorId moet overeenkomen met de parameters van de ActionResult Method Index in Consult Controller -->
        <button class="clickButtonJP">
            @Html.ActionLink("Consults", "Index", "Consult", new { doctorId = c.Client.DoctorId, clientId = c.Client.Id })
        </button>
    </td>
    <td>
        <!-- clientId / doctorId moet overeenkomen met de parameters van de ActionResult Method Index in Consult Controller -->
        <button class="clickButtonJP">
            @Html.ActionLink("Facturen", "Index", "Invoice", new { doctorId = c.Client.DoctorId, clientId = c.Client.Id })
        </button>
    </td>

</tr>

    }

    <tr>
        <td></td>
    </tr>
</table>


